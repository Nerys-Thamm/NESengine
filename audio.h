#ifndef E746EAB8_5409_42F4_9F66_40DA75BCC5FB
#define E746EAB8_5409_42F4_9F66_40DA75BCC5FB
#include "types.h"
namespace NES
{
    //APU
    //The APU is the sound chip that handles the sound output.
    //This class is meant to be a replica of the functionality of the APU, to provide sound that is authentic.
    class APU
    {
    public:
        APU();
        ~APU();

        //The main function of the APU.
        //This function is called every frame.
        //It handles the sound output, and the timing of the sound output.
        void Step();

        //Set the volume of the sound output.
        //The volume is a value between 0 and 1.
        //The default volume is 0.5.
        void SetVolume(float volume);

        //Get the volume of the sound output.
        //The volume is a value between 0 and 1.
        float GetVolume();


        //Play loaded audio of given index.
        void PlaySound(int sound);

        //Stop playback
        void StopSound();
        
    private:
        //The following functions are used to set the sound output.
        //The sound output is generated by the following formula:
        //  sound = (square1 + square2 + triangle + noise) / 4
        //The sound output is then clamped to the range [-32767, 32767].
        //The sound output is then converted to signed short, and stored in the sound buffer.
        //The sound buffer is then played by the sound output device.
        void SetSquare1(int value);
        void SetSquare2(int value);
        void SetTriangle(int value);
        void SetNoise(int value);


    };
}

#endif /* E746EAB8_5409_42F4_9F66_40DA75BCC5FB */
